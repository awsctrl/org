apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: github-controller-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: repositories.github.go.hein.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    description: Status of the Repository
    name: Status
    type: string
  group: github.go.hein.dev
  names:
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Repository is the Schema for the repositories API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RepositorySpec defines the desired state of Repository
          properties:
            description:
              description: Description is the description of the repository
              type: string
            homepage:
              description: Homepage is the location where documentation can be found
              type: string
            organization:
              description: Organization is the name of the Github organization
              type: string
            settings:
              description: Settings contains all the settings repository settings
              properties:
                issues:
                  description: Issues means the project has Github issues enabled
                  type: boolean
                private:
                  description: Private means it will create a private repo
                  type: boolean
                projects:
                  description: Projects means the project has Github projects enabled
                  type: boolean
                template:
                  description: Template means the project is a template
                  type: boolean
                wiki:
                  description: Wiki means the project has Github wiki enabled
                  type: boolean
              type: object
          required:
          - organization
          type: object
        status:
          description: RepositoryStatus defines the observed state of Repository
          properties:
            forkCount:
              description: ForkCount is the amount of forks when this was last synced
              type: integer
            stargazersCount:
              description: StargazersCount is amount of stars when it was last synced
              type: integer
            status:
              description: Status stores the status of the repository
              type: string
            url:
              description: URL stores the URL of the repos
              type: string
            watchersCount:
              description: WatchersCount is amount of watchers when it was last synced
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: github-controller-leader-election-role
  namespace: github-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: github-controller-manager-role
rules:
- apiGroups:
  - github.go.hein.dev
  resources:
  - repositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - github.go.hein.dev
  resources:
  - repositories/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: github-controller-leader-election-rolebinding
  namespace: github-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: github-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: github-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-controller-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: github-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: github-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: github-controller-controller-manager-metrics-service
  namespace: github-controller-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: github-controller-controller-manager
  namespace: github-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --actual-delete=false
        command:
        - /manager
        env:
        - name: GITHUB_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: github-token
              name: github-controller-github-auth-token
        image: r.hein.dev/github-controller/manager:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
